# Default values for hypha-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/amun-ai/hypha
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.21.22"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  # type: LoadBalancer
  # type: NodePort
  port: 9520
  # nodePort: 30080  # Only used when type is NodePort (must be 30000-32767)

ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: hypha.amun.ai
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: hypha.amun.ai-tls
      hosts:
        - hypha.amun.ai

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health/liveness
    port: 9520
readinessProbe:
  httpGet:
    path: /health/readiness
    port: 9520

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Define environment variables here
env:
  - name: HYPHA_JWT_SECRET
    valueFrom:
      secretKeyRef:
        name: hypha-secrets
        key: HYPHA_JWT_SECRET
  - name: HYPHA_HOST
    value: "0.0.0.0"
  - name: HYPHA_PORT
    value: "9520"
  - name: HYPHA_ALLOW_ORIGINS
    value: "*"
  - name: HYPHA_BASE_PATH
    value: "/"
  - name: HYPHA_PUBLIC_BASE_URL
    value: "https://hypha.amun.ai"
  - name: HYPHA_DATABASE_URI
    value: "sqlite+aiosqlite:////data/hypha-app-database.db"
  
  # Redis configuration (uncomment to enable)
  # - name: HYPHA_REDIS_URI
  #   value: "redis://redis.hypha.svc.cluster.local:6379/0"
  # - name: HYPHA_RESET_REDIS
  #   value: "false"
  
  # Triton servers configuration
  # - name: HYPHA_TRITON_SERVERS
  #   value: "triton-server1:8000,triton-server2:8000"
  
  # Server apps configuration
  # - name: HYPHA_ENABLE_SERVER_APPS
  #   value: "true"
  
  # S3 configuration (uncomment to enable)
  # - name: HYPHA_ENABLE_S3
  #   value: "true"
  # - name: HYPHA_S3_ADMIN_TYPE
  #   value: "minio"
  # - name: HYPHA_ENDPOINT_URL
  #   value: "http://minio.hypha.svc.cluster.local:9000"
  # - name: HYPHA_ENDPOINT_URL_PUBLIC
  #   value: "https://minio.my-domain.com"
  # - name: HYPHA_REGION_NAME
  #   value: "EU"
  # - name: HYPHA_ACCESS_KEY_ID
  #   valueFrom:
  #     secretKeyRef:
  #       name: minio-credentials
  #       key: ACCESS_KEY_ID
  # - name: HYPHA_SECRET_ACCESS_KEY
  #   valueFrom:
  #     secretKeyRef:
  #       name: minio-credentials
  #       key: SECRET_ACCESS_KEY
  # - name: HYPHA_ENABLE_S3_PROXY
  #   value: "true"
  # - name: HYPHA_WORKSPACE_BUCKET
  #   value: "hypha-workspaces"
  # - name: HYPHA_S3_CLEANUP_PERIOD
  #   value: "300"
  # - name: HYPHA_ENABLE_S3_FOR_ANONYMOUS_USERS
  #   value: "false"
  
  # Ollama configuration
  # - name: HYPHA_OLLAMA_HOST
  #   value: "http://ollama.hypha.svc.cluster.local:11434"
  
  # OpenAI configuration
  # - name: HYPHA_OPENAI_BASE_URL
  #   value: "https://api.openai.com/v1"
  # - name: HYPHA_OPENAI_API_KEY
  #   valueFrom:
  #     secretKeyRef:
  #       name: openai-credentials
  #       key: API_KEY
  
  # Database migration
  # - name: HYPHA_MIGRATE_DATABASE
  #   value: "head"
  
  # Executable path
  # - name: HYPHA_EXECUTABLE_PATH
  #   value: "bin"
  
  # Static mounts (space-separated list)
  # - name: HYPHA_STATIC_MOUNTS
  #   value: "/mystatic:./static/ /docs:./docs/"
  
  # Startup functions (space-separated list)
  # - name: HYPHA_STARTUP_FUNCTIONS
  #   value: "my_module:startup_function another_module:init_function"
  # To Enable conda worker (merge with other startup functions )
  # - name: HYPHA_STARTUP_FUNCTIONS
    # value: "hypha.workers.conda:hypha_startup"

  # Conda worker configuration (when using conda worker as startup function)
  # - name: CONDA_WORKING_DIR
  #   value: "/tmp/conda-sessions"
  # - name: CONDA_CACHE_DIR
  #   value: "/tmp/conda-cache"
  # - name: CONDA_AUTHORIZED_WORKSPACES
  #   value: "workspace1,workspace2"
  
  # Server ID (auto-generated when autoscaling is enabled)
  # - name: HYPHA_SERVER_ID
  #   valueFrom:
  #     fieldRef:
  #       fieldPath: metadata.uid
  
  # Cache directory
  # - name: HYPHA_CACHE_DIR
  #   value: "/cache"
  
  # Feature flags
  # - name: HYPHA_ENABLE_SERVICE_SEARCH
  #   value: "false"
  # - name: HYPHA_ENABLE_A2A
  #   value: "false"
  # - name: HYPHA_ENABLE_MCP
  #   value: "false"
  # - name: HYPHA_IN_DOCKER
  #   value: "true"
  
  # Kubernetes worker configuration
  # - name: HYPHA_ENABLE_K8S_WORKER
  #   value: "false"
  # - name: HYPHA_K8S_NAMESPACE
  #   value: "default"
  # - name: HYPHA_K8S_DEFAULT_TIMEOUT
  #   value: "3600"
  # - name: HYPHA_K8S_IMAGE_PULL_POLICY
  #   value: "IfNotPresent"
  
  # Interactive mode
  # - name: HYPHA_INTERACTIVE
  #   value: "false"
  # - name: HYPHA_ENABLE_SERVER
  #   value: "false"
  
  # MinIO server configuration (for built-in MinIO)
  # - name: HYPHA_START_MINIO_SERVER
  #   value: "false"
  # - name: HYPHA_MINIO_WORKDIR
  #   value: "/data/minio"
  # - name: HYPHA_MINIO_PORT
  #   value: "9000"
  # - name: HYPHA_MINIO_ROOT_USER
  #   value: "minioadmin"
  # - name: HYPHA_MINIO_ROOT_PASSWORD
  #   value: "minioadmin"
  # - name: HYPHA_MINIO_VERSION
  #   value: "latest"
  # - name: HYPHA_MC_VERSION
  #   value: "latest"
  # - name: HYPHA_MINIO_FILE_SYSTEM_MODE
  #   value: "false"
  
  # Housekeeping configuration
  # - name: HYPHA_HOUSEKEEPING_INTERVAL
  #   value: "300"

# Define command-line arguments here
startupCommand:
  command: ["python", "-m", "uvicorn"]
  args:
    - "hypha.server:app"
    - "--host=$(HYPHA_HOST)"
    - "--port=$(HYPHA_PORT)"

# Persistence Configuration
# Note: This is optional. Required only if you want to:
# - Cache conda environments for better performance
# - Store other persistent data (e.g., database, artifacts)
persistence:
  enabled: true
  volumeName: hypha-app-storage
  mountPath: /data
  # storageClass: ""
  # PVC Configuration
  accessModes:
    - ReadWriteMany
  size: 10Gi
  # storageClass: "" # Uncomment and set to use a specific storage class

# Kubernetes Worker Configuration
k8sWorker:
  # Enable Kubernetes worker for launching pods
  enabled: false
  # Kubernetes namespace where worker pods will be created
  # If not specified, uses the same namespace as the helm release
  namespace: ""
  # Default timeout for pods in seconds
  defaultTimeout: 3600
  # Image pull policy for worker pods
  imagePullPolicy: "IfNotPresent"
