# Hypha Server Kit - Unified deployment configuration
# This chart bundles Hypha Server with its dependencies (MinIO, PostgreSQL, Redis)

# Global configuration
global:
  # Namespace to deploy resources (used for internal service discovery)
  namespace: hypha
  # Storage class for persistent volumes
  storageClass: ""

# Hypha Server configuration
hypha-server:
  enabled: true
  
  replicaCount: 1
  
  image:
    repository: ghcr.io/amun-ai/hypha
    pullPolicy: IfNotPresent
    tag: "0.20.93"
  
  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/proxy-body-size: 8192m
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
      nginx.ingress.kubernetes.io/websocket-services: "hypha-server-kit"
    hosts:
      - host: hypha-server-kit.scilifelab-2-dev.sys.kth.se
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: hypha-server-kit-tls
        hosts:
          - hypha-server-kit.scilifelab-2-dev.sys.kth.se
  
  service:
    type: ClusterIP
    # type: NodePort  # For bare metal deployments without ingress
    port: 9520
    # nodePort: 30080  # Only used when type is NodePort (must be 30000-32767)
  
  resources:
    limits:
      cpu: "2"
      memory: "4Gi"
    requests:
      cpu: "1"
      memory: "2Gi"
  
  # Security context for pod and container to ensure writable PVCs for non-root
  podSecurityContext:
    fsGroup: 1000
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
  
  persistence:
    enabled: true
    size: 10Gi
    mountPath: /data
    storageClass: ""
    accessModes:
      - ReadWriteOnce
  
  # Hypha environment configuration - matching the actual hypha-server chart
  env:
    - name: HYPHA_LOGLEVEL
      value: "INFO"
    - name: MC_CONFIG_DIR
      value: "/tmp/.mc"
    - name: HYPHA_JWT_SECRET
      valueFrom:
        secretKeyRef:
          name: hypha-secrets
          key: HYPHA_JWT_SECRET
    - name: HYPHA_HOST
      value: "0.0.0.0"
    - name: HYPHA_PORT
      value: "9520"
    - name: HYPHA_PUBLIC_BASE_URL
      value: "https://hypha-server-kit.scilifelab-2-dev.sys.kth.se"
    - name: HYPHA_DATABASE_URI
      valueFrom:
        secretKeyRef:
          name: hypha-secrets
          key: HYPHA_DATABASE_URI
    - name: HYPHA_REDIS_URI
      valueFrom:
        secretKeyRef:
          name: hypha-secrets
          key: HYPHA_REDIS_URI
    - name: HYPHA_ENABLE_SERVER_APPS
      value: "true"
    - name: HYPHA_EXECUTABLE_PATH
      value: "/home/bin"
    - name: HYPHA_ENABLE_S3
      value: "true"
    - name: HYPHA_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: hypha-secrets
          key: HYPHA_ACCESS_KEY_ID
    - name: HYPHA_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: hypha-secrets
          key: HYPHA_SECRET_ACCESS_KEY
    - name: HYPHA_ENDPOINT_URL
      value: "http://hypha-server-kit-minio:9000"
    - name: HYPHA_ENDPOINT_URL_PUBLIC
      value: "https://s3.example.com"  # CHANGE THIS for public S3 access
    - name: HYPHA_S3_ADMIN_TYPE
      value: "minio"
    - name: HYPHA_ENABLE_S3_PROXY
      value: "true"
    - name: HYPHA_ENABLE_MCP
      value: "true"
    - name: HYPHA_ENABLE_A2A
      value: "true"
    # - name: HYPHA_ENABLE_SERVICE_SEARCH
    #   value: "false"
    - name: HYPHA_WORKSPACE_BUCKET
      value: "hypha-workspaces"

# MinIO configuration
minio:
  enabled: true
    
  auth:
      # Use existing secret for credentials
      existingSecret: hypha-secrets
      rootUserSecretKey: HYPHA_ACCESS_KEY_ID
      rootPasswordSecretKey: HYPHA_SECRET_ACCESS_KEY
      # Optional: Force users to specify required passwords
      forcePassword: false
      # Optional: Mount credentials as files instead of using environment variables
      usePasswordFiles: true
      # Optional: Uses a secret to mount the credential files
      useSecret: true
    
  
  mode: standalone
  
  persistence:
    enabled: true
    size: 50Gi
    storageClass: ""
  
  service:
    type: ClusterIP
    ports:
      api: 9000
      console: 9001
  
  # Optionally enable MinIO ingress
  ingress:
    enabled: false
    hostname: minio-kit.local
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    tls: false
  
  # Create default buckets
  defaultBuckets: "hypha-workspaces"
  
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 500m

# PostgreSQL configuration
postgresql:
  enabled: true
  
  auth:
    username: hypha
    database: hypha_db
    # Use existing secret for password
    existingSecret: hypha-secrets
    secretKeys:
      adminPasswordKey: POSTGRES_PASSWORD
      userPasswordKey: POSTGRES_PASSWORD
  
  primary:
    persistence:
      enabled: true
      size: 20Gi
      storageClass: ""
    
    resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 512Mi
        cpu: 500m
  
  metrics:
    enabled: false

# Redis configuration
redis:
  enabled: true
  
  architecture: standalone
  
  auth:
    enabled: true
    # Use existing secret for password
    existingSecret: hypha-secrets
    existingSecretPasswordKey: REDIS_PASSWORD
  
  master:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: ""
    
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 250m
  
  metrics:
    enabled: false

# Configuration Notes:
# 1. All sensitive data is stored in the 'hypha-secrets' secret
# 2. Create secrets using: ./create-secrets.sh .env hypha
# 3. Update domain names in ingress and HYPHA_PUBLIC_BASE_URL
# 4. For production, ensure all passwords in .env are changed from defaults

# Additional configuration options
monitoring:
  enabled: false
  prometheus:
    enabled: false
  grafana:
    enabled: false

backup:
  enabled: false
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention: 7  # Keep backups for 7 days
