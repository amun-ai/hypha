name: Release

on:
  push:
    branches:
      - main
      - master

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Upload docs to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          publish_branch: gh-pages
          keep_files: true

      - name: Set up Python
        uses: actions/setup-python@v5.1.1
        with:
          python-version: "3.8"

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.8"
          channels: conda-forge,defaults
          channel-priority: true

      - name: Upgrade pip
        run: |
          python -m pip install pip
          pip --version
        shell: bash -l {0}

      - name: Install dependencies
        run: |
          pip install -r requirements_pypi.txt
        shell: bash -l {0}

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "::set-output name=sha::$(git rev-parse --verify --quiet HEAD^)"

      - name: Detect and tag new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@v2.0.3
        with:
          version-command: |
            bash -o pipefail -c "cat hypha/VERSION | jq -r '.version'"

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel
        shell: bash -l {0}

      - name: Publish package on PyPI
        if: steps.check-version.outputs.tag
        uses: pypa/gh-action-pypi-publish@v1.9.0
        with:
          user: __token__
          password: "${{ secrets.PYPI_TOKEN }}"

      - name: Publish the release notes
        uses: release-drafter/release-drafter@v6.0.0
        with:
          publish: "${{ steps.check-version.outputs.tag != '' }}"
          tag: "${{ steps.check-version.outputs.tag }}"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

