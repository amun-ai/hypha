version: '3.8'

services:
  hypha-server:
    image: ghcr.io/amun-ai/hypha:0.21.1
    ports:
      - "${HYPHA_PORT:-9527}:9527"
    environment:
      # Core Configuration
      - HOME=/data
      - HYPHA_JWT_SECRET=${HYPHA_JWT_SECRET}
      - HYPHA_HOST=${HYPHA_HOST:-0.0.0.0}
      - HYPHA_PORT=${HYPHA_PORT:-9527}
      - HYPHA_PUBLIC_BASE_URL=${HYPHA_PUBLIC_BASE_URL:-http://localhost:9527}
      - HYPHA_LOGLEVEL=${HYPHA_LOGLEVEL:-INFO}
      
      # Database Configuration - PostgreSQL
      - HYPHA_DATABASE_URI=postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-mysecretpassword}@postgres:5432/${POSTGRES_DB:-hypha_db}
      - HYPHA_MIGRATE_DATABASE=head
      
      # Redis Configuration
      - HYPHA_REDIS_URI=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      - HYPHA_RESET_REDIS=${HYPHA_RESET_REDIS:-false}
      
      # S3 Configuration using MinIO
      - HYPHA_ENABLE_S3=true
      - HYPHA_ACCESS_KEY_ID=${HYPHA_ACCESS_KEY_ID:-minioadmin}
      - HYPHA_SECRET_ACCESS_KEY=${HYPHA_SECRET_ACCESS_KEY:-minioadmin}
      - HYPHA_ENDPOINT_URL=http://minio:9000
      - HYPHA_ENDPOINT_URL_PUBLIC=${HYPHA_ENDPOINT_URL_PUBLIC:-http://localhost:9000}
      - HYPHA_S3_ADMIN_TYPE=minio
      - HYPHA_ENABLE_S3_PROXY=true
      - HYPHA_WORKSPACE_BUCKET=${HYPHA_WORKSPACE_BUCKET:-hypha-workspaces}
      
      # Feature Flags
      - HYPHA_ENABLE_SERVER_APPS=true
      - HYPHA_ENABLE_MCP=true
      - HYPHA_ENABLE_A2A=true
      - HYPHA_ENABLE_SERVICE_SEARCH=${HYPHA_ENABLE_SERVICE_SEARCH:-false}
      
      # Cache Configuration
      - HYPHA_CACHE_DIR=/data/cache
      
      # Optional: Startup Functions
      - HYPHA_STARTUP_FUNCTIONS=${HYPHA_STARTUP_FUNCTIONS:-}
      
      # Optional: Static Mounts
      - HYPHA_STATIC_MOUNTS=${HYPHA_STATIC_MOUNTS:-}
      
      # Optional: Triton Servers
      - HYPHA_TRITON_SERVERS=${HYPHA_TRITON_SERVERS:-}
      
      # Optional: S3 Cleanup Period (hours)
      - HYPHA_S3_CLEANUP_PERIOD=${HYPHA_S3_CLEANUP_PERIOD:-24}
    volumes:
      - ${HYPHA_DATA_DIR:-./data/hypha}:/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: python -m hypha.server --port=9527
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9527/health/liveness"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  postgres:
    image: postgres:15-alpine
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-mysecretpassword}
      - POSTGRES_DB=${POSTGRES_DB:-hypha_db}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ${POSTGRES_DATA_DIR:-./data/postgres}:/var/lib/postgresql/data/pgdata
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-hypha_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis123}
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123} --appendonly yes
    volumes:
      - ${REDIS_DATA_DIR:-./data/redis}:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-redis123}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  minio:
    image: minio/minio:RELEASE.2025-03-12T18-04-18Z-cpuv1
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    environment:
      - MINIO_ROOT_USER=${HYPHA_ACCESS_KEY_ID:-minioadmin}
      - MINIO_ROOT_PASSWORD=${HYPHA_SECRET_ACCESS_KEY:-minioadmin}
      - MINIO_DEFAULT_BUCKETS=${HYPHA_WORKSPACE_BUCKET:-hypha-workspaces}
    volumes:
      - ${MINIO_DATA_DIR:-./data/minio}:/data
    command: server --console-address ":9001" /data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# Optional: Create networks for better service isolation
networks:
  default:
    name: hypha-network
    driver: bridge

# Define volumes for better management
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  hypha_data:
    driver: local 